{"version":3,"sources":["util.js","constants.js","scss/bookCard.module.scss","scss/bookList.module.scss","BookList/BookCard.js","BookList/index.js"],"names":["getData","path","axios","get","patchData","obj","patch","addData","post","deleteData","delete","handleAlert","msg","method","setTimeout","getBooksUrl","module","exports","BookCard","book","match","useRouteMatch","className","styles","bookCard","to","url","id","bookCardDetail","bookCardTitle","title","bookCardAuthor","author","BookList","useState","bookList","setBookList","load","setLoad","useEffect","then","res","data","Loading","bookListHeader","icon","faPlus","bookListBody","map","index"],"mappings":"uGAAA,+LAEA,SAASA,EAAQC,GACb,OAAOC,IAAMC,IAAIF,GAGrB,SAASG,EAAUH,EAAMI,GACrB,OAAOH,IAAMI,MAAML,EAAMI,GAG7B,SAASE,EAAQN,EAAMI,GACnB,OAAOH,IAAMM,KAAKP,EAAMI,GAG5B,SAASI,EAAWR,GAChB,OAAOC,IAAMQ,OAAOT,GAGxB,IAAMU,EAAc,SAACC,EAAKC,GACtBA,EAAOD,GACPE,YAAW,WACPD,EAAO,MACR,Q,gCCtBP,sCAAME,EAAc,mD,mBCCpBC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,iCAAiC,cAAgB,gCAAgC,eAAiB,mC,mBCA3KD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,iCAAiC,aAAe,iC,iGCe1GC,EAZE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACXC,EAAQC,cACZ,OACI,qBAAKC,UAAWC,IAAOC,SAAvB,SACI,eAAC,IAAD,CAAMC,GAAE,UAAKL,EAAMM,IAAX,YAAkBP,EAAKQ,IAAML,UAAWC,IAAOK,eAAvD,UACI,mBAAGN,UAAWC,IAAOM,cAArB,SAAqCV,EAAKW,QAC1C,mBAAGR,UAAWC,IAAOQ,eAArB,SAAsCZ,EAAKa,e,yDC6B5CC,UA5BE,WAAO,IAAD,EAEaC,mBAAS,IAFtB,mBAEZC,EAFY,KAEFC,EAFE,OAGKF,oBAAS,GAHd,mBAGZG,EAHY,KAGNC,EAHM,KAWnB,OANAC,qBAAU,WACNvC,YAAQe,KAAayB,MAAK,SAACC,GACvBL,EAAYK,EAAIC,MAChBJ,GAAQ,QAEb,IAEC,sBAAKhB,UAAWC,IAAOY,SAAvB,WACc,IAATE,GAAiB,cAACM,EAAA,EAAD,IAClB,sBAAKrB,UAAWC,IAAOqB,eAAvB,UACI,0DACA,cAAC,IAAD,CAAMnB,GAAG,OAAT,SAAgB,cAAC,IAAD,CAAiBoB,KAAMC,WAE3C,qBAAKxB,UAAWC,IAAOwB,aAAvB,SACKZ,EAASa,KAAI,SAAC7B,EAAM8B,GAAP,OACV,cAAC,EAAD,CAAsB9B,KAAMA,GAAb8B","file":"static/js/6.8f06718f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction getData(path) {\n    return axios.get(path)\n}\n\nfunction patchData(path, obj) {\n    return axios.patch(path, obj)\n}\n\nfunction addData(path, obj) {\n    return axios.post(path, obj)\n}\n\nfunction deleteData(path) {\n    return axios.delete(path)\n}\n\nconst handleAlert = (msg, method) => {\n    method(msg);\n    setTimeout(() => {\n        method(\"\");\n    }, 1500)\n}\n\n\nexport {\n    getData, patchData, addData,  deleteData, handleAlert\n}","const getBooksUrl = \"https://fe-interview-api.unnotech.com/api/book/\"\n\nexport {\n    getBooksUrl\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookCard\":\"bookCard_bookCard__1olIU\",\"bookCardDetail\":\"bookCard_bookCardDetail__1V1t0\",\"bookCardTitle\":\"bookCard_bookCardTitle__2fVBc\",\"bookCardAuthor\":\"bookCard_bookCardAuthor__295xw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookList\":\"bookList_bookList__23X_K\",\"bookListHeader\":\"bookList_bookListHeader__2hHGv\",\"bookListBody\":\"bookList_bookListBody__cbdwN\"};","import React from \"react\";\nimport styles from \"../scss/bookCard.module.scss\"\nimport {Link, useRouteMatch} from \"react-router-dom\";\n\nconst BookCard = ({book}) => {\n    let match = useRouteMatch();\n    return (\n        <div className={styles.bookCard}>\n            <Link to={`${match.url}/${book.id}`} className={styles.bookCardDetail}>\n                <p className={styles.bookCardTitle}>{book.title}</p>\n                <p className={styles.bookCardAuthor}>{book.author}</p>\n            </Link>\n        </div>\n    );\n}\n\nexport default BookCard","import React, {useState, useEffect} from \"react\";\nimport BookCard from \"./BookCard\";\nimport Loading from \"../Common/Loading\";\nimport {Link} from \"react-router-dom\";\nimport {getData} from \"../util\";\nimport {getBooksUrl} from \"../constants\";\nimport styles from \"../scss/bookList.module.scss\"\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\n\n\nconst BookList = () => {\n\n    const [bookList, setBookList] = useState([]);\n    const [load, setLoad] = useState(true);\n\n    useEffect(() => {\n        getData(getBooksUrl).then((res) => {\n            setBookList(res.data);\n            setLoad(false);\n        })\n    }, [])\n    return (\n        <div className={styles.bookList}>\n            {load === true && <Loading />}\n            <div className={styles.bookListHeader}>\n                <h1>書本列表</h1>\n                <Link to=\"/add\"><FontAwesomeIcon icon={faPlus}/></Link>\n            </div>\n            <div className={styles.bookListBody}>\n                {bookList.map((book, index) =>\n                    <BookCard key={index} book={book}/>\n                )}\n            </div>\n        </div>\n\n    );\n}\n\nexport default BookList;\n"],"sourceRoot":""}